name: Deploy

on:
  push:
    branches:
      - 'main'
      - 'develop'
      - 'pre-prod'

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Fetch complete history

    - name: Install AWS Copilot
      run: sudo curl -Lo /usr/local/bin/copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux && sudo chmod +x /usr/local/bin/copilot && copilot --help

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: eu-west-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Deploy in the Preview env
      if: ${{ github.ref == 'refs/heads/develop' }}
      run: copilot deploy -e preview --force
      env:
        DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN_PREVIEW }}

    - name: Deploy in the Production env
      if: ${{ github.ref == 'refs/heads/main' }}
      run: copilot deploy -e production --force
      env:
        DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN_PRODUCTION }}

    - name: Deploy in the Pre-prod env
      if: ${{ github.ref == 'refs/heads/pre-prod' }}
      run: copilot deploy -e pre-prod --force
      env:
        DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN_PREPROD }}

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Fetch complete history

    - name: Generate user-friendly changes summary
      id: changes_summary
      run: |
        echo "CHANGES_SUMMARY<<EOF" >> $GITHUB_ENV
        echo "## üìã What Changed in This Deployment:" >> $GITHUB_ENV
        echo "" >> $GITHUB_ENV
        
        # Get last 10 commits with enhanced descriptions
        git log -10 --pretty=format:'%s' | while IFS= read -r commit; do
          # Convert technical terms to user-friendly language
          enhanced_commit=$(echo "$commit" | \
            sed -E 's/^fix(\([^)]+\))?:/üêõ **Bug Fix:** /i' | \
            sed -E 's/^feat(\([^)]+\))?:/‚ú® **New Feature:** /i' | \
            sed -E 's/^chore(\([^)]+\))?:/üßπ **Maintenance:** /i' | \
            sed -E 's/^docs(\([^)]+\))?:/üìö **Documentation:** /i' | \
            sed -E 's/^style(\([^)]+\))?:/üíÑ **UI\/Styling:** /i' | \
            sed -E 's/^refactor(\([^)]+\))?:/‚ôªÔ∏è **Code Improvement:** /i' | \
            sed -E 's/^test(\([^)]+\))?:/üß™ **Testing:** /i' | \
            sed -E 's/^perf(\([^)]+\))?:/‚ö° **Performance:** /i' | \
            sed -E 's/API/User Interface/gi' | \
            sed -E 's/component/interface element/gi' | \
            sed -E 's/endpoint/connection point/gi' | \
            sed -E 's/database/data storage/gi' | \
            sed -E 's/optimize/improve speed of/gi' | \
            sed -E 's/refactor/reorganize and improve/gi')
          
          # If no conventional commit format detected, add default emoji
          if [[ ! "$enhanced_commit" =~ ^[üêõ‚ú®üßπüìöüíÑ‚ôªÔ∏èüß™‚ö°] ]]; then
            enhanced_commit="üîß **Update:** $enhanced_commit"
          fi
          
          echo "‚Ä¢ $enhanced_commit" >> $GITHUB_ENV
        done
        echo "" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Generate technical details
      id: technical_details
      run: |
        echo "TECH_DETAILS<<EOF" >> $GITHUB_ENV
        echo "" >> $GITHUB_ENV
        echo "## üîß Technical Details:" >> $GITHUB_ENV
        echo "**Files Changed:** $(git diff --name-only HEAD~5 HEAD | wc -l) files" >> $GITHUB_ENV
        echo "**Lines Added:** +$(git diff --numstat HEAD~5 HEAD | awk '{add+=$1} END {print add+0}')" >> $GITHUB_ENV
        echo "**Lines Removed:** -$(git diff --numstat HEAD~5 HEAD | awk '{del+=$2} END {print del+0}')" >> $GITHUB_ENV
        echo "**Deployment Time:** $(date '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_ENV
        echo "" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Send Discord Notification
      if: always()
      uses: Ilshidur/action-discord@master
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        DISCORD_AVATAR: "https://res.cloudinary.com/dun8bju7q/image/upload/v1753807987/mw-socials_3_evlwta.png"
        DISCORD_MENTIONS: '{ "users": ["976068042318569482", "615959113586835476"] }'
      with:
        args: |
          <@976068042318569482> <@615959113586835476>
          üöÄ **Meet With Wallet - Deployment Completed**
          
          **Environment:** ${{ github.ref == 'refs/heads/main' && 'üåü Production' || github.ref == 'refs/heads/develop' && 'üß™ Preview' || github.ref == 'refs/heads/pre-prod' && 'üéØ Pre-Production' || '‚ùì Unknown' }}
          **Status:** ${{ job.status == 'success' && '‚úÖ Successful' || '‚ùå Failed' }}
          **Deployed by:** ${{ github.actor }}
          
          ${{ env.CHANGES_SUMMARY }}
          
          ${{ env.TECH_DETAILS }}
          
          **üîó Links:**
          ‚Ä¢ [View Deployment Details](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          ‚Ä¢ [Browse Code Changes](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})